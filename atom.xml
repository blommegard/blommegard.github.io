<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Simon Blommegård]]></title>
  <link href="http://blommegard.github.io/atom.xml" rel="self"/>
  <link href="http://blommegard.github.io/"/>
  <updated>2013-11-18T15:35:14-08:00</updated>
  <id>http://blommegard.github.io/</id>
  <author>
    <name><![CDATA[Simon Blommegård]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Custom colored status bar content on iOS7]]></title>
    <link href="http://blommegard.github.io/blog/2013/11/15/custom-colored-status-bar-content-on-ios7/"/>
    <updated>2013-11-15T21:25:00-08:00</updated>
    <id>http://blommegard.github.io/blog/2013/11/15/custom-colored-status-bar-content-on-ios7</id>
    <content type="html"><![CDATA[<p>As we all know the only two values of <code>UIStatusBarStyle</code> are <code>UIStatusBarStyleDefault</code> &amp; <code>UIStatusBarStyleLightContent</code>, the background behind the bar on the other hand can vary a lot nowadays. During the iOS7 redesign at <a href="http://wrapp.com">Wrapp</a> we found it hard to match our yellow and brown colors with the white or black status bar content.</p>

<p><img src="http://blommegard.github.io/images/StatusBarBlackWhite.png" width="640"></p>

<p>Me and <a href="http://dribbble.com/Gellermark">Marcus</a> started digging around for solutions and found the ivar <code>_statusBarWindow</code> on <a href="https://github.com/JaviSoto/iOS7-Runtime-Headers/blob/master/Frameworks/UIKit.framework/UIApplication.h#L22"><code>UIApplication</code></a>, yeah, yeah, I know it is private.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'>  <span class="n">UIApplication</span> <span class="o">*</span><span class="n">app</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">];</span>
</span><span class='line'>  <span class="n">UIWindow</span> <span class="o">*</span><span class="n">window</span> <span class="o">=</span> <span class="p">[</span><span class="n">app</span> <span class="nl">valueForKey:</span><span class="s">@&quot;statusBarWindow&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">window</span> <span class="o">&amp;&amp;</span> <span class="p">[</span><span class="n">window</span> <span class="nl">isKindOfClass:</span><span class="p">[</span><span class="n">UIWindow</span> <span class="n">class</span><span class="p">]])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">UIImageView</span> <span class="o">*</span><span class="n">overlayImageView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">app</span><span class="p">.</span><span class="n">statusBarFrame</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">overlayImageView</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;Yellow Navigation Bar&quot;</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">overlayImageView</span> <span class="nl">setClipsToBounds:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">overlayImageView</span> <span class="nl">setContentMode:</span><span class="p">(</span><span class="n">UIViewContentModeScaleAspectFill</span><span class="p">)];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">overlayImageView</span> <span class="nl">setAlpha:</span><span class="mf">.4f</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">window</span> <span class="nl">addSubview:</span><span class="n">overlayImageView</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I use the same image as the <code>UINavigationBar</code> background image, but clip it to the status bar frame and add it above the bar in the window. The result:</p>

<p><img src="http://blommegard.github.io/images/StatusBar.png" width="640"></p>

<p>If you got a translucent bar, there will be a little more work to match the colors. Another take on this may be to create anoter window, place it in front and add the overlay to that one. But then you have to dispatch all touch event from that one as well.</p>

<p>Another example of what you can do when you have a reference to the status bar window is translate it with the hamburger menu just like <a href="http://flyosity.com/interesting/">Interesting</a> does by <a href="http://twitter.com/flyosity">@flyosity</a></p>

<p>I’m <a href="http://twitter.com/blommegard">@blommegard</a> on Twitter, ping me with feedback!</p>
]]></content>
  </entry>
  
</feed>
